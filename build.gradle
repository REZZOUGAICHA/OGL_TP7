plugins {
    id 'java'
    id 'jacoco'
    id ("org.sonarqube") version "4.4.0.3356"
    id ("maven-publish")
    id ("com.github.spacialcircumstances.gradle-cucumber-reporting") version "0.1.25"
    id ("io.github.oleksiiparf.slack-webhook") version "1.0.0"
    id ("de.zebrajaeger.sendMail") version "0.2.2"
}

group = 'com.example'
version = '1.0'
repositories {
    mavenCentral()

}

dependencies {
    testImplementation 'io.cucumber:cucumber-java:6.0.0'
    testImplementation 'io.cucumber:cucumber-junit:6.0.0'
    testImplementation 'junit:junit:4.12'
}



cucumberReports {
    outputDir = file('build/reports/cucumber')
    buildId = '0'
    reports = files('reports/example-report.json')
}


test.finalizedBy "jacocoTestReport"


jacocoTestReport {
    reports {
        xml.required = true  // Enable XML report for SonarQube
        csv.required = false
        html.required = true
    }
}


publishing {
    repositories {
        maven {
            url System.getenv('MAVEN_REPO_URL')
            credentials {
                username System.getenv('MAVEN_REPO_USERNAME')
                password System.getenv('MAVEN_REPO_PASSWORD')
            }
        }
    }
}

task postPublishedPluginToSlack {
    doLast {
        def webhookUrl = 'https://hooks.slack.com/services/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'
        def message = '{"text": "Project is published! "}'

        // Create the URL object
        def url = new URL(webhookUrl)

        // Open a connection
        def connection = url.openConnection() as HttpURLConnection
        connection.requestMethod = 'POST'
        connection.setRequestProperty('Content-Type', 'application/json')
        connection.doOutput = true

        // Send the message as JSON payload
        connection.outputStream.withWriter { writer ->
            writer.write(message)
        }

        // Check the response code
        def responseCode = connection.responseCode
        println "Response Code: ${responseCode}"

        connection.disconnect()
    }
}

sendMail {
    smtpServer {
        host "smtp.gmail.com"
        port 587
        user "la_rezzoug@esi.dz"
        password "wsnd hhim azbw idkf"
    }
    mail {
        from "la_rezzoug@esi.dz"
        to "la_rezzoug@esi.dz"

        body "TP5 OGL IS WORKING!"
    }
}

task postPublishedPluginToSlack {
    doLast {
        def webhookUrl = 'https://hooks.slack.com/services/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'
        def message = '{"text": "Project is published! "}'

        // Create the URL object
        def url = new URL(webhookUrl)

        // Open a connection
        def connection = url.openConnection() as HttpURLConnection
        connection.requestMethod = 'POST'
        connection.setRequestProperty('Content-Type', 'application/json')
        connection.doOutput = true

        // Send the message as JSON payload
        connection.outputStream.withWriter { writer ->
            writer.write(message)
        }

        // Check the response code
        def responseCode = connection.responseCode
        println "Response Code: ${responseCode}"

        connection.disconnect()
    }
}

sendMail {
    smtpServer {
        host "smtp.gmail.com"
        port 587
        user "la_rezzoug@esi.dz"
        password "wsnd hhim azbw idkf"
    }
    mail {
        from "la_rezzoug@esi.dz"
        to "la_rezzoug@esi.dz"

        body "TP5 OGL IS WORKING!"
    }
}
